{"uid":"d3859dd6b934819","name":"test_failed_fixture_value_in_display_name","fullName":"tests.allure_pytest.acceptance.display_name.display_name_test#test_failed_fixture_value_in_display_name","historyId":"5fafb55adb957b8c89d626b8c11a0211","time":{"start":1710860844633,"stop":1710860844656,"duration":23},"description":"\n    >>> import allure\n    >>> import pytest\n\n    >>> @pytest.fixture\n    ... def fix():\n    ...     raise AssertionError(\"Fixture failed for some reason\")\n\n    >>> @allure.title('title with {fix}')\n    ... def test_fixture_value_name(fix):\n    ...     pass\n    ","descriptionHtml":"<pre><code>&gt;&gt;&gt; import allure\n&gt;&gt;&gt; import pytest\n\n&gt;&gt;&gt; @pytest.fixture\n... def fix():\n...     raise AssertionError(&quot;Fixture failed for some reason&quot;)\n\n&gt;&gt;&gt; @allure.title('title with {fix}')\n... def test_fixture_value_name(fix):\n...     pass\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"tmp_path_factory","time":{"start":1710860843563,"stop":1710860843564,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"monkeypatch","time":{"start":1710860844631,"stop":1710860844631,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"pytester","time":{"start":1710860844632,"stop":1710860844633,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"allure_pytest_runner","time":{"start":1710860844633,"stop":1710860844633,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"\n    >>> import allure\n    >>> import pytest\n\n    >>> @pytest.fixture\n    ... def fix():\n    ...     raise AssertionError(\"Fixture failed for some reason\")\n\n    >>> @allure.title('title with {fix}')\n    ... def test_fixture_value_name(fix):\n    ...     pass\n    ","status":"passed","steps":[],"attachments":[{"uid":"ca3dcaef2fa08e73","name":"stdout","source":"ca3dcaef2fa08e73.txt","type":"text/plain","size":1620}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false},"afterStages":[{"name":"monkeypatch::0","time":{"start":1710860844656,"stop":1710860844656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"allure_pytest_runner::0","time":{"start":1710860844656,"stop":1710860844656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"pytester::_finalize","time":{"start":1710860844656,"stop":1710860844656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests.allure_pytest.acceptance.display_name"},{"name":"suite","value":"display_name_test"},{"name":"host","value":"MacBook-Pro-whenessel.local"},{"name":"thread","value":"17648-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.allure_pytest.acceptance.display_name.display_name_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"d3859dd6b934819.json","parameterValues":[]}