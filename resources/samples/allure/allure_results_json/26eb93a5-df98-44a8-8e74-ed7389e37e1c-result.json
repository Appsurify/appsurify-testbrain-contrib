{"name": "test_nested_fixtures", "status": "passed", "description": "\n    >>> import pytest\n\n    If we have two fixtures:\n    >>> @pytest.fixture\n    ... def first_fixture():\n    ...     pass\n\n\n    >>> @pytest.fixture\n    ... def second_fixture():\n    ...     pass\n\n    And one that uses both previous:\n    >>> @pytest.fixture\n    ... def child_fixture(first_fixture, second_fixture):\n    ...     pass\n\n    For next test, allure report will contain all tree fixtures:\n    >>> def test_nested_fixtures_example(child_fixture):\n    ...     pass\n    ", "attachments": [{"name": "stdout", "source": "99e56623-6a65-45b6-ac48-8e1fe2972fa5-attachment.txt", "type": "text/plain"}], "start": 1710872967238, "stop": 1710872967257, "uuid": "3ff462b4-d109-4073-976e-30e4b89dc983", "historyId": "0371bde7c2d3b8312146226be3ee77c6", "testCaseId": "0371bde7c2d3b8312146226be3ee77c6", "fullName": "tests.allure_pytest.acceptance.fixture.fixture_test#test_nested_fixtures", "labels": [{"name": "feature", "value": "Fixture"}, {"name": "parentSuite", "value": "tests.allure_pytest.acceptance.fixture"}, {"name": "suite", "value": "fixture_test"}, {"name": "host", "value": "MacBook-Pro-whenessel.local"}, {"name": "thread", "value": "29518-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.allure_pytest.acceptance.fixture.fixture_test"}]}